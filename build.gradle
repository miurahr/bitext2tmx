plugins {
    id 'java'
    id 'checkstyle'
    id 'distribution'
    id 'application'
}

mainClassName = 'org.tmpotter.Main'
applicationName = 'tmpotter'

sourceCompatibility = '1.8'

// TMPotter uses UTF8 encoded resources bundle
// @see  org.tmpotter.util.Utf8ResourceBundleControl
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

checkstyle {
  config = resources.text.fromFile("${rootProject.projectDir}/config/checkstyle/checkstyle.xml")
  ignoreFailures = true
  toolVersion = '6.16.1'
}

checkstyleMain
    .exclude('**/gen/core/**')
    .exclude('**/org/tmpotter/filters/*/ImportWizard*/')
    .exclude('**/org/tmpotter/ui/**')
    .exclude('**/org/tmpotter/util/xml/**')

repositories {
  jcenter()
  maven {
    url 'http://dl.bintray.com/omegat-org/maven'
  }
}

dependencies {
    compile 'org.swinglabs.swingx:swingx-all:1.6.5-1'
    compile 'com.googlecode.juniversalchardet:juniversalchardet:1.0.3'
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'commons-io:commons-io:2.5'
    compile 'org.omegat:lib-mnemonics:1.0'
    compile 'net.sf.okapi:okapi-core:1.40.0'
    compile 'net.sf.okapi.lib:okapi-lib-xliff2:1.40.0'
    compile 'net.sf.okapi.filters:okapi-filter-xliff:1.40.0'
    compile project(':segmentation')
    runtime 'org.slf4j:slf4j-simple:1.7.21'
    testCompile 'org.testng:testng:6.9.10'
    testCompile 'org.xmlunit:xmlunit-core:2.1.1'
}

test {
  useTestNG()
}

project(':segmentation') {
    apply plugin: 'java'
    sourceCompatibility = '1.8'
    repositories {
        jcenter()
    }
    dependencies {
        // https://mvnrepository.com/artifact/jakarta.xml.bind/jakarta.xml.bind-api
        compile group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '2.3.3'
        // https://mvnrepository.com/artifact/org.glassfish.jaxb/jaxb-runtime
        compile group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.3.3'
        compile 'com.sun.xml.bind:jaxb-impl:2.3.3'
    }
}
