/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.tmpotter.ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.lang.reflect.Field;
import javax.swing.JButton;

/**
 *
 * @author miurahr
 */
public class EditToolBar extends javax.swing.JPanel implements ActionListener {
	
	private ModelMediator modelMediator;

	/**
	 * Creates new form EditToolBar
	 */
	public EditToolBar() {
		initComponents();
	}

	public final void setUndoEnabled(boolean enabled) {
		buttonUndo.setEnabled(enabled);
	}

	public void setModelMediator(ModelMediator mediator) {
		this.modelMediator = mediator;
	}

	/**
	 * Set 'actionCommand' for all menu items.
	 */
	protected void setActionCommands() {
		try {
			for (Field f : this.getClass().getDeclaredFields()) {
				if (JButton.class.isAssignableFrom(f.getType())) {
					JButton button = (JButton) f.get(this);
					button.setActionCommand(f.getName());
					button.addActionListener(this);
				}
			}
		} catch (IllegalAccessException ex) {
			throw new ExceptionInInitializerError(ex);
		}
	}
  
	@Override
	public final void actionPerformed(final ActionEvent action) {
		final Object actor = action.getSource();

		if (actor instanceof JButton) {
			if (actor == buttonUndo) {
				modelMediator.undoChanges();
				modelMediator.onUndo();
			} else if (actor == buttonRedo) {
				
			} else if (actor == buttonCut) {
				
			} else if (actor == buttonCopy) {
				
			} else if (actor == buttonPaste) {
				
			} else if (actor == buttonSave) {
				
			} else if (actor == buttonSaveAs) {
				
			}
		}
	}

	final void enableButtons(boolean enabled) {
		buttonSave.setEnabled(enabled);
		buttonSaveAs.setEnabled(enabled);
		buttonClose.setEnabled(enabled);
		buttonUndo.setEnabled(enabled);
		buttonRedo.setEnabled(enabled);
		buttonCut.setEnabled(enabled);
		buttonCopy.setEnabled(enabled);
		buttonPaste.setEnabled(enabled);
	}


	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT
	 * modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                editToolBar = new javax.swing.JToolBar();
                buttonNew = new javax.swing.JButton();
                buttonOpen = new javax.swing.JButton();
                buttonSave = new javax.swing.JButton();
                buttonSaveAs = new javax.swing.JButton();
                buttonClose = new javax.swing.JButton();
                buttonExit = new javax.swing.JButton();
                jSeparator1 = new javax.swing.JToolBar.Separator();
                buttonUndo = new javax.swing.JButton();
                buttonRedo = new javax.swing.JButton();
                buttonCut = new javax.swing.JButton();
                buttonCopy = new javax.swing.JButton();
                buttonPaste = new javax.swing.JButton();

                setMinimumSize(new java.awt.Dimension(300, 52));
                setPreferredSize(new java.awt.Dimension(300, 52));

                editToolBar.setFloatable(false);
                editToolBar.setRollover(true);
                editToolBar.setMinimumSize(new java.awt.Dimension(100, 64));
                editToolBar.setPreferredSize(new java.awt.Dimension(100, 64));

                buttonNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/tmpotter/ui/resources/filenew.png"))); // NOI18N
                buttonNew.setText("New");
                buttonNew.setFocusable(false);
                buttonNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
                buttonNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                editToolBar.add(buttonNew);

                buttonOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/tmpotter/ui/resources/fileopen.png"))); // NOI18N
                buttonOpen.setText("Open");
                buttonOpen.setFocusable(false);
                buttonOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
                buttonOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                editToolBar.add(buttonOpen);

                buttonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/tmpotter/ui/resources/filesave.png"))); // NOI18N
                buttonSave.setText("Save");
                buttonSave.setFocusable(false);
                buttonSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
                buttonSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                editToolBar.add(buttonSave);

                buttonSaveAs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/tmpotter/ui/resources/filesave.png"))); // NOI18N
                buttonSaveAs.setText("Save as");
                buttonSaveAs.setFocusable(false);
                buttonSaveAs.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
                buttonSaveAs.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                editToolBar.add(buttonSaveAs);

                buttonClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/tmpotter/ui/resources/fileclose.png"))); // NOI18N
                buttonClose.setText("Close");
                buttonClose.setFocusable(false);
                buttonClose.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
                buttonClose.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                editToolBar.add(buttonClose);

                buttonExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/tmpotter/ui/resources/application-exit.png"))); // NOI18N
                buttonExit.setText("Exit");
                buttonExit.setFocusable(false);
                buttonExit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
                buttonExit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                editToolBar.add(buttonExit);
                editToolBar.add(jSeparator1);

                buttonUndo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/tmpotter/ui/resources/undo.png"))); // NOI18N
                buttonUndo.setText("Undo");
                buttonUndo.setFocusable(false);
                buttonUndo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
                buttonUndo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                editToolBar.add(buttonUndo);

                buttonRedo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/tmpotter/ui/resources/redo.png"))); // NOI18N
                buttonRedo.setText("Redo");
                buttonRedo.setFocusable(false);
                buttonRedo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
                buttonRedo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                editToolBar.add(buttonRedo);

                buttonCut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/tmpotter/ui/resources/cut.png"))); // NOI18N
                buttonCut.setText("Cut");
                buttonCut.setFocusable(false);
                buttonCut.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
                buttonCut.setMinimumSize(new java.awt.Dimension(45, 45));
                buttonCut.setPreferredSize(new java.awt.Dimension(45, 45));
                buttonCut.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                editToolBar.add(buttonCut);

                buttonCopy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/tmpotter/ui/resources/editcopy.png"))); // NOI18N
                buttonCopy.setText("Copy");
                buttonCopy.setFocusable(false);
                buttonCopy.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
                buttonCopy.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                editToolBar.add(buttonCopy);

                buttonPaste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/tmpotter/ui/resources/editpaste.png"))); // NOI18N
                buttonPaste.setText("Paste");
                buttonPaste.setFocusable(false);
                buttonPaste.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
                buttonPaste.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                editToolBar.add(buttonPaste);

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
                this.setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(editToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(editToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                );
        }// </editor-fold>//GEN-END:initComponents


        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton buttonClose;
        private javax.swing.JButton buttonCopy;
        private javax.swing.JButton buttonCut;
        private javax.swing.JButton buttonExit;
        private javax.swing.JButton buttonNew;
        private javax.swing.JButton buttonOpen;
        private javax.swing.JButton buttonPaste;
        private javax.swing.JButton buttonRedo;
        private javax.swing.JButton buttonSave;
        private javax.swing.JButton buttonSaveAs;
        private javax.swing.JButton buttonUndo;
        private javax.swing.JToolBar editToolBar;
        private javax.swing.JToolBar.Separator jSeparator1;
        // End of variables declaration//GEN-END:variables
}
